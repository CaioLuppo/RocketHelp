{"version":3,"sources":["extractBrush.ts"],"names":["urlIdPattern","currentColorBrush","contextFillBrush","contextStrokeBrush","extractBrush","color","brush","match","processedColor","console","warn","String"],"mappings":"sFAAA,yCAEA,GAAMA,CAAAA,YAAY,CAAG,gBAArB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CAAC,CAAD,CAA1B,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CAAC,CAAD,CAAzB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,CAAC,CAAD,CAA3B,CAEe,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA0C,CACvD,GAAI,CAACA,KAAD,EAAUA,KAAK,GAAK,MAAxB,CAAgC,CAC9B,MAAO,KAAP,CACD,CAED,GAAIA,KAAK,GAAK,cAAd,CAA8B,CAC5B,MAAOJ,CAAAA,iBAAP,CACD,CAED,GAAII,KAAK,GAAK,cAAd,CAA8B,CAC5B,MAAOH,CAAAA,gBAAP,CACD,CAED,GAAIG,KAAK,GAAK,gBAAd,CAAgC,CAC9B,MAAOF,CAAAA,kBAAP,CACD,CAED,GAAMG,CAAAA,KAAK,CAAG,MAAOD,CAAAA,KAAP,GAAiB,QAAjB,EAA6BA,KAAK,CAACE,KAAN,CAAYP,YAAZ,CAA3C,CACA,GAAIM,KAAJ,CAAW,CACT,MAAO,CAAC,CAAD,CAAIA,KAAK,CAAC,CAAD,CAAT,CAAP,CACD,CAED,GAAME,CAAAA,cAAc,CAAG,8BAAaH,KAAb,CAAvB,CACA,GAAI,MAAOG,CAAAA,cAAP,GAA0B,QAA9B,CAAwC,CACtC,MAAOA,CAAAA,cAAP,CACD,CAED,GAAI,MAAOA,CAAAA,cAAP,GAA0B,QAA1B,EAAsCA,cAAc,GAAK,IAA7D,CAAmE,CAIjE,MAAO,CAAC,CAAD,CAAIA,cAAJ,CAAP,CACD,CAEDC,OAAO,CAACC,IAAR,MAAiBC,MAAM,CAACN,KAAD,CAAvB,qCACA,MAAO,KAAP,CACD","sourcesContent":["import { ColorValue, processColor } from 'react-native';\n\nconst urlIdPattern = /^url\\(#(.+)\\)$/;\n\nconst currentColorBrush = [2];\nconst contextFillBrush = [3];\nconst contextStrokeBrush = [4];\n\nexport default function extractBrush(color?: ColorValue) {\n  if (!color || color === 'none') {\n    return null;\n  }\n\n  if (color === 'currentColor') {\n    return currentColorBrush;\n  }\n\n  if (color === 'context-fill') {\n    return contextFillBrush;\n  }\n\n  if (color === 'context-stroke') {\n    return contextStrokeBrush;\n  }\n\n  const brush = typeof color === 'string' && color.match(urlIdPattern);\n  if (brush) {\n    return [1, brush[1]];\n  }\n\n  const processedColor = processColor(color);\n  if (typeof processedColor === 'number') {\n    return processedColor;\n  }\n\n  if (typeof processedColor === 'object' && processedColor !== null) {\n    // if we got an object, it should be `PlatformColor` or `DynamicColorIOS`,\n    // so we pass it as an array with `0` value as first item, which is interpreted\n    // on the native side as color to be managed by `RCTConvert`.\n    return [0, processedColor];\n  }\n\n  console.warn(`\"${String(color)}\" is not a valid color or brush`);\n  return null;\n}\n"]}